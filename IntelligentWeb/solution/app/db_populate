// -------- Middleware & Constants -------- \\

const mongoose = require('mongoose'),
    User = mongoose.model('User'),
    Category = mongoose.model('Category'),
    Restaurant = mongoose.model('Restaurant'),
    Review = mongoose.model('Review');

const ID = {
    "Aslan's": "5aad8b2e6fb09e3a54ea366b",
    "Nando's": "5aad8b2e6fb09e3a54ea366c",
    "Gourmet Burger Kitchen": "5aad8b2e6fb09e3a54ea366d",
    Wagamama: "5ab1677c521e5430fc7d2493",
    "Siam Thai and Teppanyaki": "5ab1677c521e5430fc7d2494",
    "Handmade Burger Co.": "5ab1677c521e5430fc7d2495",
    "Miller & Carter": "5ab1677c521e5430fc7d2496",
    "Almost Famous": "5ab1677c521e5430fc7d2497"
};

// -------- Database -------- \\

const populateFunction = function populateDatabase(insertPromises) {
    populateUsers(insertPromises);
    populateCategories(insertPromises);
    populateRestaurants(insertPromises);
    populateReviews(insertPromises);
};

function populateUsers(insertPromises) {
    insertPromises.push(new User({
        _id: "copeyrufus@gmail.com",
        email: "copeyrufus@gmail.com",
        password: "Caddy1",
        privilege_level: 1,
        forename: "Rufus",
        surname: "Cope",
        ageCategory: 2,
        county: "Shropshire",
        reviews: [],
        display_img_filename: "copeyrufus-gmail-com",
        user_rating: 0
    }).save());

    insertPromises.push(new User({
        _id: "greta.veronika@gmail.com",
        email: "greta.veronika@gmail.com",
        password: "Vodka2",
        privilege_level: 1,
        forename: "Greta",
        surname: "Ramaneckaite",
        ageCategory: 2,
        county: "South Yorkshire",
        reviews: [],
        display_img_filename: "greta-veronika-gmail-com",
        user_rating: 0,
        restaurants: []
    }).save());

    insertPromises.push(new User({
        _id: "worgarside@gmail.com",
        email: "worgarside@gmail.com",
        password: "Passw3rd",
        privilege_level: 1,
        forename: "Will",
        surname: "Garside",
        ageCategory: 2,
        county: "Cheshire",
        reviews: [],
        display_img_filename: "worgarside-gmail-com",
        user_rating: 0,
        restaurants: []
    }).save());

    insertPromises.push(new User({
        _id: "aslan@chicken-shop.com",
        email: "aslan@chicken-shop.com",
        password: "Asl4n",
        privilege_level: 1,
        forename: "Aslan",
        surname: "Chicken",
        age: 2,
        county: "South Yorkshire",
        reviews: [],
        display_img_filename: "aslan-chicken-shop-com",
        user_rating: 0,
        restaurants: ["5aad8b2e6fb09e3a54ea366b"]
    }).save());
}

function populateCategories(insertPromises) {
    const categories = [
        {name: "Fast Food"},
        {name: "Chicken"},
        {name: "Inexpensive"},
        {name: "Convenient"},
        {name: "Portuguese"},
        {name: "Japanese"},
        {name: "Spicy"},
        {name: "Burgers"},
        {name: "Student Discount"},
        {name: "Premium"},
        {name: "Steakhouse"},
        {name: "Smokehouse"},
        {name: "Vegetarian"},
        {name: "Vegan"},
        {name: "Casual"}
    ];

    for (let i = 0; i < categories.length; i++) {
        insertPromises.push(new Category(categories[i]).save());
    }
}

function populateRestaurants(insertPromises) {
    insertPromises.push(new Restaurant({
        _id: mongoose.Types.ObjectId(ID["Aslan's"]),
        name: "Aslan's Kebab",
        address1: "187",
        address2: "West Street",
        city: "Sheffield",
        postcode: "S1 4EW",
        latitude: 53.380002,
        longitude: -1.480078,
        url: undefined,
        menu: undefined,
        phone: "01144345634",
        opening_times: [[540, 1020], [540, 1020], [540, 1020], [540, 1020], [540, 1020], [540, 1020], [540, 1020]],
        description: "Local kebab house with mixed reviews. A favourite with students and people with low hygiene standards",
        price_range: 1,
        category: ["FastFood", "Chicken", "Convenient", "Inexpensive"],
        parking: false,
        wifi: false,
        takeout: true,
        delivery: false,
        outdoor_seating: false,
        reservations: false,
        alcohol: false,
        owner_id: "aslan@chicken-shop.com",
        owner_message: "Please come and buy my chicken, I don't want to close again!",
        reviews: ["5aad98377888995220605d10", "5aad98377888995220605d0f"],
        average_rating: 3,
        published: true
    }).save());

    insertPromises.push(new Restaurant({
        _id: mongoose.Types.ObjectId(ID["Nando's"]),
        name: "Nando's",
        address1: "Royal Plaza Development",
        address2: "West Street",
        city: "Sheffield",
        postcode: "S1 4EZ",
        latitude: 53.380494,
        longitude: -1.477221,
        url: "https://www.nandos.co.uk",
        menu: "https://www.nandos.co.uk/food/menu",
        phone: "01142780044",
        opening_times: [[690, 1380], [690, 1380], [690, 1380], [690, 1380], [690, 1380], [690, 1380], [690, 1380]],
        description: "Afro-Portuguese chain restaurant serving flame-grilled chicken in spicy chilli sauce.",
        price_range: 2,
        category: ["Chicken", "Portuguese", "Spicy", "Burgers", "Casual", "Vegetarian"],
        parking: false,
        wifi: false,
        takeout: true,
        delivery: true,
        outdoor_seating: false,
        reservations: true,
        alcohol: true,
        owner_id: undefined,
        owner_message: undefined,
        reviews: [],
        average_rating: undefined,
        published: true
    }).save());

    insertPromises.push(new Restaurant({
        _id: mongoose.Types.ObjectId(ID["Gourmet Burger Kitchen"]),
        name: "Gourmet Burger Kitchen",
        address1: "Unit 8",
        address2: "24 The Moor",
        city: "Sheffield",
        postcode: "S1 4PA",
        latitude: 53.377303,
        longitude: -1.473198,
        url: "https://www.gbk.co.uk",
        menu: "https://www.gbk.co.uk/menu",
        phone: "0114 275 5154",
        opening_times: [[690, 1320], [690, 1320], [690, 1320], [690, 1320], [690, 1320], [690, 1320], [690, 1320]],
        description: "Chain restaurant with classic wooden decor, serving gourmet British beef, chicken or veggie burgers.",
        price_range: 3,
        category: ["Spicy", "Burgers", "Casual", "Vegetarian"],
        parking: false,
        wifi: false,
        takeout: true,
        delivery: true,
        outdoor_seating: false,
        reservations: true,
        alcohol: true,
        owner_id: undefined,
        owner_message: undefined,
        reviews: ["5aad98377888995220605d11"],
        average_rating: 4,
        published: true
    }).save());

    insertPromises.push(new Restaurant({
        _id: mongoose.Types.ObjectId(ID.Wagamama),
        name: "Wagamama",
        address1: "12",
        address2: "Meadowhall Centre",
        city: "Sheffield",
        postcode: "S9 1EP",
        latitude: 53.414766,
        longitude: -1.412663,
        url: "www.wagamama.com/restaurants/sheffield-meadowhall",
        menu: "www.wagamama.com/our-menu",
        phone: "01142568033",
        opening_times: [[660, 1320], [660, 1320], [660, 1320], [660, 1320], [660, 1320], [660, 1380], [660, 1380]],
        description: "Asian-inspired & Japanese chain restaurant where dishes are whisked to long communal tables.",
        price_range: 3,
        category: ["Spicy", "Casual", "Japanese", "Vegetarian"],
        parking: true,
        wifi: true,
        takeout: true,
        delivery: false,
        outdoor_seating: false,
        reservations: false,
        alcohol: true,
        owner_id: undefined,
        owner_message: undefined,
        reviews: [],
        average_rating: undefined,
        published: true
    }).save());

    insertPromises.push(new Restaurant({
        _id: mongoose.Types.ObjectId(ID["Siam Thai and Teppanyaki"]),
        name: "Siam Thai and Teppanyaki",
        address1: "32",
        address2: "City Road",
        city: "Chester",
        postcode: "CH1 3AE",
        latitude: "53.193437",
        longitude: "-2.881447",
        url: "www.siam-teppanyaki.co.uk/",
        menu: undefined,
        phone: "01244403222",
        opening_times: [[720, 1350], [1020, 1380], [720, 1380], [720, 1380], [720, 1380], [720, 1380], [720, 1410]],
        description: "Airy Asian eatery with Japanese Teppanyaki dining, Thai restaurant and a bar on separate floors.",
        price_range: 3,
        category: ["Japanese", "Chicken", "Vegetarian"],
        parking: true,
        wifi: undefined,
        takeout: true,
        delivery: undefined,
        outdoor_seating: false,
        reservations: true,
        alcohol: true,
        owner_id: undefined,
        owner_message: undefined,
        reviews: [],
        average_rating: 5,
        published: true
    }).save());


    insertPromises.push(new Restaurant({
        _id: mongoose.Types.ObjectId(ID["Handmade Burger Co."]),
        name: "Handmade Burger Co.",
        address1: "The Old Courthouse, 184",
        address2: "Deansgate",
        city: "Manchester",
        postcode: "M3 3WB",
        latitude: 53.479377,
        longitude: -2.249153,
        url: "www.handmadeburger.co.uk",
        menu: "www.handmadeburger.co.uk/menu/",
        phone: "01618320708",
        opening_times: [[720, 1320], [720, 1320], [720, 1320], [720, 1320], [720, 1320],[720, 1380],[720, 1260]],
        description: "Chain serving specialist burgers on sourdough or brioche buns and hand-mixed milkshakes.",
        price_range: 3,
        category: ["Burgers", "Spicy", "StudentDiscount", "Casual", "Vegetarian"],
        parking: false,
        wifi: true,
        takeout: undefined,
        delivery: undefined,
        outdoor_seating: undefined,
        reservations: true,
        alcohol: true,
        owner_id: undefined,
        owner_message: undefined,
        reviews: [],
        average_rating: undefined,
        published: "true"
    }).save());

    insertPromises.push(new Restaurant({
        _id: mongoose.Types.ObjectId(ID["Miller & Carter"]),
        name: "Miller & Carter",
        address1: "345",
        address2: "Ecclesall Rd S",
        city: "Sheffield",
        postcode: "S11 9PW",
        latitude: 53.3478805,
        longitude: -1.5217238,
        url: "www.millerandcarter.co.uk/",
        menu: "www.millerandcarter.co.uk/food",
        phone: "01142362735",
        opening_times: [[690, 1380], [690, 1380], [690, 1380], [690, 1380], [690, 1380], [690, 1380], [690, 1380]],
        description: undefined,
        price_range: 5,
        category: ["Premium", "Steakhouse"],
        parking: undefined,
        wifi: undefined,
        takeout: undefined,
        delivery: undefined,
        outdoor_seating: undefined,
        reservations: undefined,
        alcohol: undefined,
        owner_id: undefined,
        owner_message: "From field to butcher's block to grill, we put everything into the perfect steak. Experience the finest British and Irish cuts at your local restaurant & steakhouse.",
        reviews: [],
        images: [],
        average_rating: undefined,
        published: "true"
    }).save());

    insertPromises.push(new Restaurant({
        _id: mongoose.Types.ObjectId(ID["Almost Famous"]),
        name: "Almost Famous",
        address1: "100-102",
        address2: "High Street",
        city: "Manchester",
        postcode: "M4 1HP",
        latitude: 53.484547,
        longitude: -2.236922,
        url: "www.almostfamousburgers.com",
        menu: undefined,
        phone: "01612449422",
        opening_times: [[1020, 1320], [1020, 1320], [1020, 1320], [1020, 1320], [720, 1380], [720, 1380], [720, 1320]],
        description: undefined,
        price_range: undefined,
        category: ["Burgers", "Casual", "Vegetarian"],
        parking: undefined,
        wifi: undefined,
        takeout: undefined,
        delivery: undefined,
        outdoor_seating: undefined,
        reservations: undefined,
        alcohol: undefined,
        owner_id: undefined,
        owner_message: undefined,
        reviews: [],
        images: [],
        average_rating: undefined,
        published: "true"
    }).save());
}

function populateReviews(insertPromises) {
    insertPromises.push(new Review({
        _id: mongoose.Types.ObjectId("5aad98377888995220605d0f"),
        restaurant_id: ID["Aslan's"],
        title: "Aslan's Sucks",
        body: "I got food poisoning here, don't eat the turkey burgers",
        author_id: "greta.veronika@gmail.com",
        datetime: new Date(Date.now()),
        images: ["2018-03-17-22-25-18", "2018-03-17-22-26-11"],
        restaurant_rating: 1,
        review_rating: 0
    }).save());

    insertPromises.push(new Review({
        _id: mongoose.Types.ObjectId("5aad98377888995220605d10"),
        restaurant_id: ID["Aslan's"],
        title: "Greatest Kebab of All Time!!!",
        body: "This is, without doubt, the GOAT when it comes to kebabs. Even Adnan's doesn't \
         stand up to the might that is ASLAN'S KEBAB HOUSE!!!",
        author_id: "copeyrufus@gmail.com",
        datetime: new Date(Date.now()),
        images: ["2018-03-17-22-31-42"],
        restaurant_rating: 5,
        review_rating: 0
    }).save());

    insertPromises.push(new Review({
        _id: mongoose.Types.ObjectId("5aad98377888995220605d11"),
        restaurant_id: ID["Gourmet Burger Kitchen"],
        title: "Great burger place, gives me tiny hands",
        body: "The burgers are so big the make my hands feel tiny, phenomenal milkshakes, decent prices - what's not to like?",
        author_id: "worgarside@gmail.com",
        datetime: new Date(Date.now()),
        images: ["2018-03-17-22-34-51"],
        restaurant_rating: 4,
        review_rating: 0
    }).save());

    insertPromises.push(new Review({
        _id: mongoose.Types.ObjectId("5aad98377888995220605d12"),
        restaurant_id: ID["Siam Thai and Teppanyaki"],
        title: "The Teppanyaki is amazing!",
        body: "I went here for my 15th birthday and even though I had a broken arm at the time, they let me have a go doing the Teppanyaki and were so helpful and friendly",
        author_id: "worgarside@gmail.com",
        datetime: new Date(Date.now()),
        images: ["2018-03-20 20-08-00"],
        restaurant_rating: 5,
        review_rating: 0
    }).save());
}

exports.populateFunction = populateFunction;
