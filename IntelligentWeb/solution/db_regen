// ================ Middleware ================ \\

const mongoose = require('mongoose');
const path = require('path');
global.appRoot = path.resolve(__dirname);
require('./app/models/user');
require('./app/models/category');
require('./app/models/restaurant');
require('./app/models/review');
const DatabasePopulation = require('./app/db_populate');
global.dbRegen = true;
const database = require('./config/database');

// ================ Database ================ \\

database.connect(initialiseDatabase);

function initialiseDatabase() {
    const collections = ["users", "categories", "restaurants", "reviews"];

    const conn = mongoose.connection;
    const db = conn.db;

    const dropPromises = [];

    console.log("Dropping database");
    for (let i = 0; i < collections.length; i++) {
        dropPromises.push(db.dropCollection(collections[i]));
    }

    Promise.all(dropPromises)
        .catch((err) => {
            console.log(`DB drop failed: ${err}`);
        })
        .then(() => {
            let indexPromises = [];

            // indexPromises.push(db.collection('restaurants').createIndex({
            //     name: 'text', categories: 'text', formattedAddress: 'text', description: 'text' },
            //     {name: 'String Search Index', weights: {name: 20, categories: 10, formattedAddress: 15, description: 10}}));
            indexPromises.push(db.collection('restaurants').createIndex({location: "2dsphere"}));

            Promise.all(indexPromises).catch((err) => {
                console.log(`Indexing failed: ${err}`);
            }).then(() => {
                populateCollections(conn);
            });
        });
}

function populateCollections(conn) {
    const insertPromises = [];
    console.log("Populating collections");
    DatabasePopulation.populateFunction(insertPromises);
    Promise.all(insertPromises)
        .catch((err) => {
            console.log(`Error on population: ${err}`)
        })
        .then(() => {
            conn.close().catch(() => {
                console.log("Unable to close connection");
            });
        });
}
