// ================ Middleware ================ \\

const mongoose = require('mongoose');
require('../app/models/user');
require('../app/models/category');
require('../app/models/restaurant');
require('../app/models/review');
const DatabasePopulation = require('../app/db_populate');

// ================ Database ================ \\

const url = 'mongodb://localhost:27017';
const dbName = "restaurant_critique";

mongoose.connect(url + "/" + dbName).then(() => {
    console.log("Connected to " + url + "/" + dbName);
    initialiseDatabase();
}).catch((err) => {
    console.log("Failed to connect to DB: " + err);
    process.exit(1);
});

function initialiseDatabase() {
    const collections = ["users", "categories", "restaurants", "reviews"];

    const conn = mongoose.connection;
    const db = conn.db;

    const dropPromises = [];

    console.log("Dropping database");
    for (let i = 0; i < collections.length; i++) {
        dropPromises.push(db.dropCollection(collections[i]));
    }

    Promise.all(dropPromises)
        .catch((err) => {
            console.log(`DB drop failed: ${err}`);
        })
        .then(() => {
            db.collection('restaurants').createIndex({location: "2dsphere"}).catch(() => {
                console.log('Index failed');
            }).then(() => {
                populateCollections(conn);
            });
        });
}

function populateCollections(conn) {
    const insertPromises = [];
    console.log("Populating collections");
    DatabasePopulation.populateFunction(insertPromises);
    Promise.all(insertPromises)
        .catch((err) => {
            console.log("Error on population: " + err)
        })
        .then(() => {
            conn.close().catch(() => {
                console.log("Unable to close connection");
            });
        });
}
